services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    env_file:
      - .env
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    env_file:
      - .env
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  postgres:
    image: postgres:15
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  producer:
    build:
      context: .
      dockerfile: Dockerfile-producer
    depends_on:
      - kafka
    env_file:
      - .env
    environment:
      - BOOTSTRAP_SERVER=${BOOTSTRAP_SERVER}
      - KAFKA_TOPIC=${KAFKA_TOPIC}
    ports:
      - "8080:8080"

  consumer:
    build:
      context: .
      dockerfile: Dockerfile-consumer
    depends_on:
      - kafka
      - postgres
    env_file:
      - .env
    environment:
      - BOOTSTRAP_SERVER=${BOOTSTRAP_SERVER}
      - KAFKA_TOPIC=${KAFKA_TOPIC}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - DB_NAME=${DB_NAME}
      - DB_SSLMODE=${DB_SSLMODE}

volumes:
  postgres_data:
